from __future__ import annotations

from fastapi import FastAPI, Request
from fastapi.responses import JSONResponse

from .routes import *

common_responses = {
    501: {
        "description": "The requested controller has not been implemented"
    }
}

app = FastAPI(
    {% if info %}
    {% for key,value in info.items() %}
    {% set info_value= value.__repr__() %}
    {{ key }} = {{info_value}},
    {% endfor %}
    {% endif %}
    responses = {**common_responses},
    )


@app.exception_handler(NotImplementedException)
async def not_implemented_exception_handler(
    request: Request, 
    exc: NotImplementedException
):
    return JSONResponse(
        status_code=501,
        content={"message": "The requested controller has not been implemented"},
    )
@app.exception_handler(HTTPException)
async def default_exception_handler(
    request: Request, exc: HTTPException
):
    return JSONResponse(
        status_code=exc.status_code,
        content={"message": exc.detail},
    )

controller = Controller()
{% for operation in operations %}
configure_routes_{{ operation.cleaned_path }}(app, controller)
{% endfor %}